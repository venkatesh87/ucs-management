#!/bin/bash
#
# Univention Self Service UMC module
#  postinst file for the debian package
#
# Copyright 2015-2017 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

#DEBHELPER#

eval "$(univention-config-registry shell)"

if [ "$server_role" = "domaincontroller_master" -o "$server_role" = "domaincontroller_backup" ]; then

	if [ "$1" = "configure" -a -z "$2" ] ; then
		echo "Fresh installation..."
		su - postgres -c "echo \"CREATE ROLE selfservice WITH LOGIN;\" | psql"
		su - postgres -c "createdb selfservice -E UTF8 -O selfservice -T template0"
	fi

	DB_SECRET_FILE=/etc/self-service-db.secret

	if [ -f $DB_SECRET_FILE ]; then
		echo "Using old DB password..."
		selfservice_pwd=$(cat $DB_SECRET_FILE)
	else
		echo "Generating new DB password..."
		selfservice_pwd=$(makepasswd --chars 20)
		touch $DB_SECRET_FILE
		chown root:root $DB_SECRET_FILE
		chmod 600 $DB_SECRET_FILE
		echo "$selfservice_pwd" > $DB_SECRET_FILE
		su - postgres -c "echo \"ALTER ROLE selfservice WITH ENCRYPTED PASSWORD '$selfservice_pwd';\" | psql"
	fi

	if ! getent passwd self-service-umc >/dev/null; then
	adduser --system --ingroup nogroup --home /var/lib/univention-self-service-passwordreset-umc self-service-umc
	chmod 0700 /var/lib/univention-self-service-passwordreset-umc
	fi

	deb-systemd-invoke enable univention-self-service-passwordreset-umc.service
	deb-systemd-invoke restart univention-self-service-passwordreset-umc.service
fi

if [ "$1" = "configure" ]; then
	uinst=/usr/lib/univention-install/65univention-self-service-passwordreset-umc.uinst
	[ -e "$uinst" ] && rm "$uinst"
fi

. /usr/share/univention-lib/base.sh
call_joinscript 35univention-self-service-passwordreset-umc.inst

invoke-rc.d univention-directory-listener crestart

if [ "$server_role" = "domaincontroller_master" -o "$server_role" = "domaincontroller_backup" ] && ! grep -q relayhost /etc/postfix/main.cf; then
	echo
	echo "This hosts mail system must be configured so it can send away."
	echo "Please consider the UCS documentation on the topic of a relay host:"
	echo "EN: http://docs.software-univention.de/manual-4.2.html#mail::serverconfig::relay"
	echo "DE: http://docs.software-univention.de/handbuch-4.2.html#mail::serverconfig::relay"
	echo
fi

exit 0
