<?xml version="1.0" encoding="UTF-8"?>
<umc version="2.0">
	<module id="appcenter" priority="50" version="1.0">
		<flavor priority="50" id="appcenter">
			<name>App Center</name>
			<description>Install or remove applications</description>
			<keywords>install,uninstall,software,update</keywords>
			<categories>
				<category name="software"/>
			</categories>
		</flavor>
		<flavor priority="50" id="packages">
			<name>Package Management</name>
			<description>Installation of software packages</description>
			<keywords>update,install,uninstall</keywords>
			<categories>
				<category name="software"/>
			</categories>
		</flavor>
		<flavor priority="50" id="components">
			<name>Repository Settings</name>
			<description>Repository server configuration</description>
			<keywords/>
			<categories>
				<category name="software"/>
			</categories>
		</flavor>
		<command name="appcenter/working" function="working" />
		<command name="appcenter/version" function="version" />
		<command name="appcenter/get_by_component_id" function="get_by_component_id" />
		<command name="appcenter/app_updates" function="app_updates" />
		<command name="appcenter/sync_ldap" function="sync_ldap" />
		<command name="appcenter/query" function="query" />
		<command name="appcenter/get" function="get" />
		<command name="appcenter/configure" function="configure" />
		<command name="appcenter/service" function="app_service" />
		<command name="appcenter/invoke" function="invoke" />
		<command name="appcenter/track" function="track" />
		<command name="appcenter/docker/enable" function="enable_docker" />
		<command name="appcenter/docker/invoke" function="invoke_docker" />
		<command name="appcenter/docker/remote/invoke" function="invoke_remote_docker" />
		<command name="appcenter/docker/remote/progress" function="remote_progress"/>
		<!-- ATTENTION: uses invoke. added because of compatibility issues between newer and older versions -->
		<command name="appcenter/invoke_dry_run" function="invoke_dry_run" />
		<!-- ATTENTION: progress comes from ProgressMixin -->
		<command name="appcenter/docker/progress" function="progress"/>
		<!-- ATTENTION: custom progress; same progress function as in packages -->
		<command name="appcenter/progress" function="custom_progress"/>
		<command name="appcenter/keep_alive" function="keep_alive"/>
		<command name="appcenter/ping" function="ping"/>
		<command name="appcenter/buy" function="buy"/>
		<command name="appcenter/enable_disable_app" function="enable_disable_app"/>

		<!-- Query: all args are filter args. -->
		<command name="appcenter/packages/query" function="packages_query" />

		<!-- Get: details of one package -->
		<command name="appcenter/packages/get" function="packages_get" />

		<!-- Invoke dry run: dont do anything just show changes -->
		<command name="appcenter/packages/invoke/test" function="packages_invoke_dry_run" />

		<!-- Invoke: function is 'install','uninstall' or 'update' -->
		<command name="appcenter/packages/invoke" function="packages_invoke" />

		<!-- Sections: fill the 'sections' combobox. -->
		<command name="appcenter/packages/sections" function="packages_sections"/>

		<!-- Progress: information for the progress bar. -->
		<!-- ATTENTION: same progress function as in app_center/packages -->
		<command name="appcenter/packages/progress" function="custom_progress"/>

		<!--
		ONLINE/COMPONENTS namespace: drives the components grid
		and the associated 'component details' form.
		-->
		<!-- QUERY: return a list of components, along with their status -->
		<command name="appcenter/components/query" function="components_query"/>
		<!-- GET: retrieve one element with this ID -->
		<command name="appcenter/components/get" function="components_get"/>
		<!-- ADD: add new settings for one component -->
		<command name="appcenter/components/add" function="components_add"/>
		<!-- PUT: write back settings for one component -->
		<command name="appcenter/components/put" function="components_put"/>
		<!-- DEL: remove the given component -->
		<command name="appcenter/components/del" function="components_del"/>

		<!--
		ONLINE/SETTINGS namespace: to fetch and write settings. Even if this
		is not really a tabular namespace, we treat it this way, and will
		always get/set the first and only 'record'.
		-->
		<!-- GET: retrieve the settings. -->
		<command name="appcenter/settings/get" function="settings_get"/>
		<!-- PUT: write back settings. -->
		<command name="appcenter/settings/put" function="settings_put"/>
	</module>
</umc>
