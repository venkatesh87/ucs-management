#!/usr/bin/python2.7
#
# Univention update uniqueMember
#
# Copyright 2008-2017 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import univention.uldap
import univention.config_registry
import ldap
import sys

cr = univention.config_registry.ConfigRegistry()
cr.load()

if cr.get("server/role", "dummy") in ["domaincontroller_master", "domaincontroller_backup"]:

	# ldap connection
	try:
		lo = univention.uldap.getAdminConnection()
	except Exception as e:
		print "failed to get ldap connection: %s" % e

	# search groups and del/add uniqueMember
	results = lo.search(base=cr.get("ldap/base"), attr=["uniqueMember"], filter="(&(objectClass=posixGroup)(uniqueMember=*))")
	for result in results:
		dn = result[0]
		uniqueMember = result[1].get("uniqueMember", [""])
		if dn and uniqueMember:
			try:
				# update groups
				ml = []
				ml.append((ldap.MOD_REPLACE, "uniqueMember", uniqueMember))
				lo.modify_s(dn, ml)
			except Exception as e:
				sys.stderr.write("E: modifing %s failed error with %s\n" % (dn, e))
				sys.stderr.write("   please check the membership of this group\n")
				sys.exit(1)
