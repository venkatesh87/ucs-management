#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention Directory Manager Modules
#  Script for converting wrong class b network entries
#
# Copyright 2004-2017 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.


import ldap
import string
import sys

import univention.baseconfig

baseConfig = univention.baseconfig.baseConfig()
baseConfig.load()

baseDN = baseConfig['ldap/base']

if baseConfig['interfaces/eth0/netmask'] != "255.255.0.0":
	print 'Only for Class B'
	sys.exit(1)

lo = ldap.open('localhost', 7389)
bindpw = open('/etc/ldap.secret').read()
if bindpw[-1] == '\n':
	bindpw = bindpw[0:-1]
	lo.simple_bind_s("cn=admin," + baseDN, bindpw)

computers = lo.search_s(baseDN, ldap.SCOPE_SUBTREE, 'objectClass=univentionHost', ['aRecord'])

for i in range(0, len(computers)):
	print 'DN: %s' % computers[i][0]
	if 'aRecord' in computers[i][1]:
		entry = computers[i][1]['aRecord'][0].split('.')[2:4]
		reverse = lo.search_s('cn=dns,%s' % baseDN, ldap.SCOPE_SUBTREE, '(&(relativeDomainName=%s)(pTRRecord=%s*))' % (string.join(entry, '.'), ldap.explode_dn(computers[i][0], 1)[0]))
		if len(reverse) != 0:
			print 'Wrong DNS Reverse Entry for %s: %s' % (computers[i][0], reverse[0][0])
			entry.reverse()
			entry = string.join(entry, '.')
			lo.modrdn_s(reverse[0][0], 'relativeDomainName=%s' % entry)
