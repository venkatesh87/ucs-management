#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention Directory Manager Modules
#  added objectClass shaowAccount to computer objects
#
# Copyright 2004-2017 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.


import ldap

import univention.baseconfig

baseConfig = univention.baseconfig.baseConfig()
baseConfig.load()

baseDN = baseConfig['ldap/base']

lo = ldap.open('localhost', 7389)
bindpw = open('/etc/ldap.secret').read()
if bindpw[-1] == '\n':
	bindpw = bindpw[0:-1]
lo.simple_bind_s("cn=admin," + baseDN, bindpw)

count_changes = 0
warning = 0


print "\n  proof if computer-accounts have objectClass shadowAccount"

res_pA = lo.search_s(baseDN, ldap.SCOPE_SUBTREE, '(&(objectClass=univentionHost)(objectClass=posixAccount)(!(objectClass=shadowAccount)))', ['objectClass'])

print "found %s Hosts which need to be changed:\n" % len(res_pA)

for i in range(0, len(res_pA)):
	modlist = [(ldap.MOD_ADD, 'objectClass', 'shadowAccount')]
	try:
		lo.modify_s(res_pA[i][0], modlist)
		count_changes = count_changes + 1
		print "Modified %s" % res_pA[i][0]
	except:
		print "Warning: failed to modify Host %s" % res_pA[i][0]
		warning = warning + 1

print "changing of", len(res_pA), "Hosts finished, changed", count_changes, "of them (", warning, " warnings).\n"
